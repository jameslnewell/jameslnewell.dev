
properties:
  - environment

resources:

  - name: bucket
    type: gcp-types/storage-v1:buckets
    properties:
      iamConfiguration:
        uniformBucketLevelAccess:
          enabled: true
      location: US
      name: jameslnewell.dev
      project: '{{ env["project"] }}'
      storageClass: STANDARD
      website:
        mainPageSuffix: index.html
        notFoundpage: 404.html
    {#
    accessControl:
      gcpIamPolicy:
          bindings:
          - role: roles/storage.objectViewer
            members:
            - allUsers
    #}

  {#
    Use of virtual.buckets.iamMemberBinding avoids concurrency issues
    in applying IAM roles
  #}
  - name: bucket-access-control
    type: gcp-types/storage-v1:virtual.buckets.iamMemberBinding
    properties:
      bucket: $(ref.bucket.name)
      {#
        Using a legacy object to prevent directory listing
        https://cloud.google.com/storage/docs/access-control/making-data-public#buckets
       #}
      role: roles/storage.objectViewer
      {# role: roles/storage.legacyObjectReader #}
      member: allUsers

  - name: backend-bucket
    type: gcp-types/compute-v1:backendBuckets
    properties:
      bucketName: $(ref.bucket.name)
      enableCdn: true

  - name: certificate
    type: gcp-types/compute-v1:sslCertificates # beta?
    properties:
      type: MANAGED
      managed:
        domains:
          - jameslnewell.dev

  - name: health-check
    type: gcp-types/compute-v1:httpsHealthChecks

  - name: url-map
    type: gcp-types/compute-v1:urlMaps
    properties:
      defaultService: $(ref.backend-bucket.selfLink)
      hostRules:
        - pathMatcher: path-matcher-1
          hosts:
            - jameslnewell.dev
      pathMatchers:
        - name: path-matcher-1
          defaultService: $(ref.backend-bucket.selfLink)
          pathRules:
            - paths:
                - /
              service: $(ref.backend-bucket.selfLink)

  - name: http-proxy
    type: gcp-types/compute-v1:targetHttpProxies
    properties:
      urlMap: $(ref.url-map.selfLink)

  - name: https-proxy
    type: gcp-types/compute-v1:targetHttpsProxies
    properties:
      urlMap: $(ref.url-map.selfLink)
      sslCertificates:
        - $(ref.certificate.selfLink)

  - name: ip-address
    type: gcp-types/compute-v1:globalAddresses

  - name: http-forwardingrule
    type: gcp-types/compute-v1:globalForwardingRules
    properties:
      target: $(ref.http-proxy.selfLink)
      IPAddress: $(ref.ip-address.address)
      IPProtocol: TCP
      portRange: 80-80

  - name: https-forwardingrule
    type: gcp-types/compute-v1:globalForwardingRules
    properties:
      target: $(ref.https-proxy.selfLink)
      IPAddress: $(ref.ip-address.address)
      IPProtocol: TCP
      portRange: 443-443

outputs:
  - name: public-ip
    value: $(ref.ip-address.address)
