name: Build and Deploy

on: [push]

jobs:
  formatting:
    name: 👮‍♂️Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn run formatting

  linting:
    name: 👮‍♂️Linting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn run linting

  typing:
    name: 👮‍♂️Typing
    runs-on: ubuntu-latest
    needs: [building]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - uses: actions/download-artifact@v2
        with:
          name: type-files
          path: src/types
      - run: yarn run typing

  building:
    name: 👷‍♂️Building
    runs-on: ubuntu-latest
    steps:
      - run: if [ $GITHUB_REF == "refs/heads/master" ] ; then echo '::set-env name=ENV::production'; else echo '::set-env name=ENV::development'; fi
      - run: if [ $GITHUB_REF == "refs/heads/master" ] ; then echo '::set-env name=GA_ID::G-2CF0YGTNJS'; else echo echo '::set-env name=GA_ID::'; fi
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - run: yarn run build
      - uses: actions/upload-artifact@v2
        with:
          name: website-files
          path: public
      - uses: actions/upload-artifact@v2
        with:
          name: type-files
          path: src/types/graphql.ts

  deploying:
    name: 👨‍✈️Deploying
    runs-on: ubuntu-latest
    needs: [formatting, linting, typing, building]
    steps:
      - run: if [ $GITHUB_REF == "refs/heads/master" ] ; then echo '::set-env name=ENV::production'; else echo '::set-env name=ENV::development'; fi
      - run: if [ $GITHUB_REF == "refs/heads/master" ] ; then echo '::set-env name=BUCKET::jameslnewell.dev'; else echo '::set-env name=BUCKET::x'; fi
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2-beta
      - id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - run: yarn install --frozen-lockfile
      - uses: actions/download-artifact@v2
        with:
          name: website-files
          path: public
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-southeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACCESS_KEY_SECRET }}
          role-to-assume: ${{ env.ENV }}
      - run: yarn satay
